@model StackOverflow.Data.Entities.QuestionEntity
@using StackOverflow.Data.Entities

@{
    ViewBag.Title = Model.Naslov;
    var authors = (Dictionary<string, UserEntity>)ViewBag.Authors;
    UserEntity questionAuthor = authors.ContainsKey(Model.AutorEmail) ? authors[Model.AutorEmail] : null;
}

<div class="question-details">
    <div class="author-info">
        <div class="author-details">
            <img src="@(questionAuthor?.SlikaUrl ?? "/Content/Images/default-avatar.png")" alt="Avatar" class="author-avatar" />
            <div>
                <div class="author-name">@authors[Model.AutorEmail].Ime @authors[Model.AutorEmail].Prezime (@authors[Model.AutorEmail].Email)</div>
            </div>
        </div>
        <div class="post-date">
            Postavljeno: @Model.Timestamp.ToString("dd.MM.yyyy. HH:mm")
        </div>
    </div>

    <h2>@Html.DisplayFor(model => model.Naslov)</h2>

    <div class="question-body" style="margin-top: 20px; white-space: pre-wrap;">
        @Model.OpisProblema
    </div>

    @if (!string.IsNullOrEmpty(Model.SlikaGreskeUrl))
    {
        <div style="margin-top: 20px;">
            <h4>Priložena slika:</h4>
            <img src="@Model.SlikaGreskeUrl" class="img-responsive" alt="Slika greske" style="max-width: 100%; border-radius: 5px;" />
        </div>
    }
</div>

<h3>Odgovori (@ViewBag.Answers.Count)</h3>

@if (ViewBag.Answers.Count == 0)
{
    <p>Još uvek nema odgovora na ovo pitanje.</p>
}
else
{
    foreach (var answer in ViewBag.Answers)
    {
        UserEntity answerAuthor = authors.ContainsKey(answer.AutorEmail) ? authors[answer.AutorEmail] : null;
        bool hasVoted = ViewBag.VotedAnswerIds.Contains(answer.RowKey);
        string containerClass = answer.JeNajboljiOdgovor ? "answer-container best-answer" : "answer-container";

<div class="@containerClass">
    <div class="author-info">
        <div class="author-details">
            <img src="@(answerAuthor?.SlikaUrl ?? "/Content/Images/default-avatar.png")" alt="Avatar" class="author-avatar" />
            <div>
                <div class="author-name">@authors[answer.AutorEmail].Ime @authors[answer.AutorEmail].Prezime (@authors[answer.AutorEmail].Email)</div>
            </div>
        </div>
        <div class="post-date">
            Odgovoreno: @answer.Timestamp.ToString("dd.MM.yyyy. HH:mm")
        </div>
    </div>
    <hr />

    @if (answer.JeNajboljiOdgovor)
    {
        <strong style="color: var(--success-color); font-size: 1.2em;">&#10004; Najbolji odgovor</strong>
    }


    <p style="white-space: pre-wrap;">@answer.TekstOdgovora</p>

    <div class="answer-actions">
        <div class="votes">Glasovi: @answer.BrojGlasova</div>

        @if (Session["user_email"] != null &&
             Session["user_email"].ToString() != Model.AutorEmail &&
             Session["user_email"].ToString() != answer.AutorEmail)
        {
            using (Html.BeginForm("Upvote", "Answers", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("idPitanja", Model.RowKey)
                @Html.Hidden("idOdgovora", (string)answer.RowKey)

                if (hasVoted)
                {
                    <input type="submit" value="Glasali ste" class="btn btn-default" disabled />
                }
                else
                {
                    <input type="submit" value="Glasaj za" class="btn btn-default" />
                }
            }
        }

        @if (Session["user_email"] != null && Session["user_email"].ToString() == Model.AutorEmail)
        {
            if (answer.JeNajboljiOdgovor)
            {
                using (Html.BeginForm("UnmarkAsBest", "Answers", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("idPitanja", Model.RowKey)
                    @Html.Hidden("idOdgovora", (string)answer.RowKey)
                    <input type="submit" value="Ukloni oznaku" class="btn btn-default" />
                }
            }
            else
            {
                using (Html.BeginForm("MarkAsBest", "Answers", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("idPitanja", Model.RowKey)
                    @Html.Hidden("idOdgovora", (string)answer.RowKey)
                    <input type="submit" value="Označi kao najbolji" class="btn btn-default" />
                }
            }
        }
    </div>
</div>
    }
}


<hr />
<h4>Postavi svoj odgovor</h4>

<div class="form-horizontal">
    @if (Session["user_email"] != null)
    {
        using (Html.BeginForm("Create", "Answers", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="idPitanja" value="@Model.RowKey" />

            <div class="form-group">
                <div class="col-md-12">
                    <textarea name="tekstOdgovora" class="form-control" rows="5" required placeholder="Unesite vaš odgovor ovde..."></textarea>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Postavi odgovor" class="btn btn-default" />
                </div>
            </div>
        }
    }
    else
    {
        <p>Morate biti @Html.ActionLink("prijavljeni", "Login", "Account") da biste postavili odgovor.</p>
    }
</div>

<div class="page-bottom-actions">
    @if (Session["user_email"] != null && Session["user_email"].ToString() == Model.AutorEmail)
    {
        @Html.ActionLink("Izmeni pitanje", "Edit", new { id = Model.RowKey }, new { @class = "btn btn-default" })
        @Html.ActionLink("Obriši pitanje", "Delete", new { id = Model.RowKey }, new { @class = "btn btn-danger" })
    }

    <div style="margin-top: 20px;">
        @Html.ActionLink("<< Nazad na listu svih pitanja", "Index")
    </div>
</div>