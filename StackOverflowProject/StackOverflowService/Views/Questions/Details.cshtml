@model StackOverflow.Data.Entities.QuestionEntity

@{
    ViewBag.Title = Model.Naslov;
}

<div class="question-details">
    <h2>@Html.DisplayFor(model => model.Naslov)</h2>
    <hr />
    <p>
        <strong>Autor:</strong> @Html.DisplayFor(model => model.AutorEmail) |
        <strong>Postavljeno:</strong> @Model.Timestamp.ToString("dd.MM.yyyy. HH:mm")
    </p>

    <div style="margin-top: 20px; font-size: 1.1em;">
        @Html.Raw(Html.Encode(Model.OpisProblema).Replace("\n", "<br />"))
    </div>

    @if (!string.IsNullOrEmpty(Model.SlikaGreskeUrl))
    {
        <div style="margin-top: 20px;">
            <h4>Priložena slika:</h4>
            <img src="@Model.SlikaGreskeUrl" class="img-responsive" alt="Slika greske" style="max-width: 100%;" />
        </div>
    }
</div>

<h3>Odgovori (@ViewBag.Answers.Count)</h3>

@if (ViewBag.Answers.Count == 0)
{
    <p>Još uvek nema odgovora na ovo pitanje.</p>
}
else
{
    foreach (var answer in ViewBag.Answers)
    {
        bool hasVoted = ViewBag.VotedAnswerIds.Contains(answer.RowKey);
        string containerClass = answer.JeNajboljiOdgovor ? "answer-container best-answer" : "answer-container";

        <div class="@containerClass">

            @if (answer.JeNajboljiOdgovor)
            {
                <strong style="color: var(--success-color);">&#10004; Najbolji odgovor</strong>
            }

            <p>@answer.TekstOdgovora</p>
            <small>Odgovorio: @answer.AutorEmail, Dana: @answer.Timestamp.ToString("dd.MM.yyyy. HH:mm")</small>

            <div class="answer-actions">
                <div class="votes">Glasovi: @answer.BrojGlasova</div>

                @if (Session["user_email"] != null &&
                     Session["user_email"].ToString() != Model.AutorEmail &&
                     Session["user_email"].ToString() != answer.AutorEmail)
                {
                    using (Html.BeginForm("Upvote", "Answers", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("idPitanja", Model.RowKey)
                        @Html.Hidden("idOdgovora", (string)answer.RowKey)

                        if (hasVoted)
                        {
                            <input type="submit" value="Glasali ste" class="btn btn-xs btn-success" disabled />
                        }
                        else
                        {
                            <input type="submit" value="Glasaj za" class="btn btn-xs btn-success" />
                        }
                    }
                }

                @if (Session["user_email"] != null && Session["user_email"].ToString() == Model.AutorEmail)
                {
                    if (answer.JeNajboljiOdgovor)
                    {
                        using (Html.BeginForm("UnmarkAsBest", "Answers", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("idPitanja", Model.RowKey)
                            @Html.Hidden("idOdgovora", (string)answer.RowKey)
                            <input type="submit" value="Ukloni oznaku" class="btn btn-xs btn-warning" />
                        }
                    }
                    else
                    {
                        using (Html.BeginForm("MarkAsBest", "Answers", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("idPitanja", Model.RowKey)
                            @Html.Hidden("idOdgovora", (string)answer.RowKey)
                            <input type="submit" value="Označi kao najbolji" class="btn btn-xs btn-info" />
                        }
                    }
                }
            </div>
        </div>
    }
}


<hr />
<h4>Postavi svoj odgovor</h4>

<div class="form-horizontal">
    @if (Session["user_email"] != null)
    {
        using (Html.BeginForm("Create", "Answers", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="idPitanja" value="@Model.RowKey" />

            <div class="form-group">
                <textarea name="tekstOdgovora" class="form-control" rows="5" required placeholder="Unesite vaš odgovor ovde..."></textarea>
            </div>
            <div class="form-group">
                <input type="submit" value="Postavi odgovor" class="btn btn-primary" />
            </div>
        }
    }
    else
    {
        <p>Morate biti @Html.ActionLink("prijavljeni", "Login", "Account") da biste postavili odgovor.</p>
    }
</div>

<hr />

<div>
    @if (Session["user_email"] != null && Session["user_email"].ToString() == Model.AutorEmail)
    {
        @Html.ActionLink("Izmeni pitanje", "Edit", new { id = Model.RowKey }, new { @class="btn btn-default" })
        @Html.ActionLink("Obriši pitanje", "Delete", new { id = Model.RowKey }, new { @class="btn btn-danger" })
    }
</div>

<div style="margin-top: 20px;">
    @Html.ActionLink("<< Nazad na listu svih pitanja", "Index")
</div>